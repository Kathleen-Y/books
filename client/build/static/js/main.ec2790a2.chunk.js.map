{"version":3,"sources":["assets/img/PageNotFound.png","components/navbar/index.js","components/form/index.js","components/cards/index.js","utils/api.js","pages/books.js","components/NotFoundPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","href","Form","props","name","value","search","onChange","handleInputChange","type","onClick","handleSubmit","Card","books","length","map","book","src","volumeInfo","imageLinks","thumbnail","alt","title","authors","description","infoLink","axios","get","Book","useState","state","setState","event","target","api","then","results","data","NotFoundPage","PageNotFound","style","textAlign","to","React","Component","App","exact","path","component","Books","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,0C,sKCY5BC,MAVf,WACI,OACI,6BACI,yBAAKC,UAAU,kDACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,yB,uBCSDC,MAbf,SAAcC,GACV,OACI,6BACI,2BAAOC,KAAM,SACbC,MAASF,EAAMG,OACfC,SAAYJ,EAAMK,kBAClBC,KAAO,SACP,4BAAQC,QAAWP,EAAMQ,cAAzB,kBCmBGC,MA1Bf,SAAcT,GACV,OACI,6BACKA,EAAMU,MAAMC,OAAS,EAAIX,EAAMU,MAAME,KAAI,SAAAC,GACtC,OACI,yBAAKhB,UAAU,QACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,WAAWiB,IAAKD,EAAKE,WAAWC,WAAWC,UAAWC,IAAI,cAE7E,yBAAKrB,UAAU,YACX,wBAAIA,UAAU,cAAcgB,EAAKE,WAAWI,OAC5C,0CAAgBN,EAAKE,WAAWK,SAChC,uBAAGvB,UAAU,aAAagB,EAAKE,WAAWM,aAC1C,uBAAGvB,KAAMe,EAAKE,WAAWO,SAAUzB,UAAU,mBAA7C,wBAMnB,oB,iBCrBF,EACK,SAASsB,GACrB,OAAOI,IAAMC,IAAI,eAAiBL,IC+B3BM,MA9Bf,WAAiB,IAAD,EACcC,mBAAS,CAC/BhB,MAAO,GACPP,OAAQ,KAHA,mBACLwB,EADK,KACEC,EADF,KAsBZ,OACI,oCACK,kBAAC,EAAD,CAAMzB,OAAUwB,EAAMxB,OAAQE,kBAnBf,SAAAwB,GAAU,IAAD,EACPA,EAAMC,OAArB7B,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MACb0B,EAAQ,2BACDD,GADC,kBAEH1B,EAAOC,MAe+DM,aAX5D,SAAAqB,GACfE,EAAmBJ,EAAMxB,QAAQ6B,MAAK,SAAAC,GAClCL,EAAS,2BACFD,GADC,IAEJjB,MAAOuB,EAAQC,cAQlB,kBAAC,EAAD,CAAMxB,MAASiB,EAAMjB,U,yDChBnByB,E,uKARP,OAAO,6BACH,yBAAKrB,IAAKsB,IAAclB,IAAI,gCAC5B,uBAAGmB,MAAO,CAACC,UAAU,WACnB,kBAAC,IAAD,CAAMC,GAAG,KAAT,qB,GALaC,IAAMC,W,OCiBlBC,MAdf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,OAAOC,UAAWV,QCFpBY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3B,MAAK,SAAA4B,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ec2790a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PageNotFound.d80627b5.png\";","import React from 'react'\n\nfunction Nav() {\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-danger\">\n                <a className=\"navbar-brand\" href=\"/\">React Books Search</a>\n            </nav>\n        </div>\n    )\n}\n\nexport default Nav","import React from 'react'\n\nfunction Form(props) {\n    return (\n        <div>\n            <input name= \"search\" \n            value = {props.search} \n            onChange = {props.handleInputChange} \n            type = \"text\" />\n            <button onClick = {props.handleSubmit}>Search Books\n            </button>\n        </div>\n    )\n}\n\nexport default Form","import React from 'react'\n\nfunction Card(props) {\n    return (\n        <div>\n            {props.books.length > 0 ? props.books.map(book => {\n                return (\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"row\">\n                                <div className=\"col-sm-3\" >\n                                    <img className=\"card-top\" src={book.volumeInfo.imageLinks.thumbnail} alt=\"Card cap\" />\n                                </div>\n                                <div className=\"col-sm-9\" >\n                                    <h4 className=\"card-title\">{book.volumeInfo.title}</h4>\n                                    <h5>Written by:{book.volumeInfo.authors}</h5>\n                                    <p className=\"card-text\">{book.volumeInfo.description}</p>\n                                    <a href={book.volumeInfo.infoLink} className=\"btn btn-primary\">Book  preview</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }) : \"No search found\"}\n        </div>\n    )\n}\n\nexport default Card","import axios from \"axios\"\n\nexport default {\n    getGoogleBooks: function(title){\n        return axios.get(\"/api/google/\" + title)\n    }\n}","import React, {useState} from \"react\"\nimport Form from \"../components/form\"\nimport Card from \"../components/cards\"\nimport api from \"../utils/api\"\n\nfunction Book (){\n    const [state, setState] = useState({\n        books: [], \n        search: \"\"\n    })\n  const handleInputChange = event => {\n        const {name, value} = event.target\n        setState ({\n            ...state,\n            [name]: value\n        })\n    }\n   \n  const handleSubmit = event => {\n        api.getGoogleBooks(state.search).then(results => {\n            setState({\n                ...state,\n                books: results.data\n            })\n        })\n    }\n\n    return (\n        <>\n             <Form search = {state.search} handleInputChange = {handleInputChange} handleSubmit= {handleSubmit} />\n             <Card books = {state.books} />\n        </>\n    )\n}\n\nexport default Book","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PageNotFound from '../assets/img/PageNotFound.png';\n\nclass NotFoundPage extends React.Component{\n    render(){\n        return <div>\n            <img src={PageNotFound} alt=\"page not found notification\" />\n            <p style={{textAlign:\"center\"}}>\n              <Link to=\"/\">Go to Home </Link>\n            </p>\n          </div>;\n    }\n}\nexport default NotFoundPage;","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/navbar/index\"\nimport Books from \"./pages/books\"\nimport NotFoundPage from './components/NotFoundPage';\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Books} />\n          <Route path=\"/404\" component={NotFoundPage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}